/*

Given a rod of length n, and an array that contains the prices of all the pieces smaller than n, determine the maximum profit you could obtain from cutting up the rod and selling its pieces.

Examples: 

Input : Rod Length = 4
        price[]  = [1, 5, 8, 9, 10, 17, 17, 20]
        length[] = [1, 2, 3, 4, 5, 6, 7, 8]
Output : 10
Explanation:
Cut the rod into two pieces of length 2 , 5 + 5 = 10
 Cut               Profit
 4                  9
 1, 3              (1 + 8) = 9
 2, 2              (5 + 5) = 10
 3, 1              (8 + 1) = 9
 1, 1, 2           (1 + 1 + 5) = 7
 1, 2, 1           (1 + 5 + 1) = 7
 2, 1, 1           (5 + 1 + 1) = 7
 1, 1, 1, 1        (1 + 1 + 1 + 1) = 4 

*/

import java.io.*;

class GFG {
	public static void main (String[] args) {
	   /* int length[] = {1, 2, 3,4, 5, 6, 7, 8};
	    int priceSize=8;
		int price[] = {1, 5, 8, 9, 10, 17, 17, 20};
		int rodLength=8;
		*/
		int length[] = {1, 2, 3};
	    int priceSize=3;
		int price[] = {3, 5, 8};
		int rodLength=3;
		
		int[][] arr=new int[rodLength+1][priceSize+1];
		for(int i=0;i<rodLength+1;i++)
		{
		    for(int j=0;j<priceSize+1;j++)
		    {
		        if(i==0)
		        {
		            arr[i][j]=0;
		        }
		        if(j==0)
		            arr[i][j]=0;
		    }
		}
		for(int i=1;i<rodLength+1;i++)
		{
		    for(int j=1;j<priceSize+1;j++)
		    {
		        if(length[i-1]>j)
		            arr[i][j]=arr[i-1][j];
		        else
		        {
		            arr[i][j]=Math.max(arr[i-1][j],arr[i][j-length[i-1]] + price[i-1]);
		        }
		    }
		}
		System.out.println(arr[rodLength][priceSize]);
	}
}