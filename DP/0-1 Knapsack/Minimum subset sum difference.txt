/*
Partition a set into two subsets such that the difference of subset sums is minimum

Given a set of integers, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum. 
If there is a set S with n elements, then if we assume Subset1 has m elements, Subset2 must have n-m elements and the value of abs(sum(Subset1) â€“ sum(Subset2)) should be minimum.

Example: 

Input:  arr[] = {1, 6, 11, 5} 
Output: 1
Explanation:
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11
*/

import java.io.*;

class GFG {
	public static void main (String[] args) {
		int set[] = {10, 20, 15, 5, 25};
		int sum=0;
		int n=5;
		for(int k=0;k<n;k++)
		{
		    sum=sum+set[k];
		}
		
		boolean[][] arr=new boolean[n+1][sum+1];
		for(int i=0;i<n+1;i++)
		{
		    for(int j=0;j<sum+1;j++)
		    {
		        if(i==0)
		        {
		            arr[i][j]=false;
		        }
		        if(j==0)
		            arr[i][j]=true;
		    }
		}
		for(int i=1;i<n+1;i++)
		{
		    for(int j=1;j<sum+1;j++)
		    {
		        if(set[i-1]>j)
		            arr[i][j]=arr[i-1][j];
		        else
		        {
		            arr[i][j]=arr[i-1][j-set[i-1]] || arr[i-1][j];
		        }
		    }
		}
		int med=Integer.MAX_VALUE;
			for(int l=0;l<(sum+1)/2;l++)
		{
		    
		    if(arr[n][l]==true)
		    {
		        med=Math.min(med,sum-2*l);
		        
		    }
		}
		System.out.println(med);
	}
}